// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Minor.Dag26.SpecflowDemo.Spec
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Vaststellen Geschiktheid Bestuurder")]
    public partial class VaststellenGeschiktheidBestuurderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VaststellenGeschiktheidBestuurder.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Vaststellen Geschiktheid Bestuurder", "Om auto’s te verhuren volgens wettelijke bepalingen en om risico’s te vermijden\r\n" +
                    "wil ik, als autoverhuurder,\r\nvast kunnen stellen of iemand een geschikte bestuur" +
                    "der is", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vaststellen geschiktheid bestuurder")]
        [NUnit.Framework.TestCaseAttribute("31-05-1995", "Nederland", "134654554", "geschikt", null)]
        [NUnit.Framework.TestCaseAttribute("01-06-1995", "Nederland", "134654554", "ongeschikt: te jong", null)]
        [NUnit.Framework.TestCaseAttribute("31-05-1995", "Malta", "134654554", "ongeschikt: uit een risicoland", null)]
        [NUnit.Framework.TestCaseAttribute("31-05-1995", "Nederland", "645642356", "ongeschikt: ongeldig rijbewijs", null)]
        public virtual void VaststellenGeschiktheidBestuurder(string geboortedatum, string landVanHerkomst, string rijbewijsnummer, string uitslag, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vaststellen geschiktheid bestuurder", exampleTags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 14
testRunner.Given("de aanvang van de huurperiode is 31 mei 2016", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
testRunner.And("de risicolanden zijn Malta en Cyprus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.And("134654554 is het nummer van een geldig rijbewijs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.And("645642356 is het nummer van een ongeldig rijbewijs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
testRunner.When(string.Format("een bestuurder met {0} uit {1} met {2} wil een auto huren", geboortedatum, landVanHerkomst, rijbewijsnummer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
testRunner.Then(string.Format("dan is de bestuurder {0}", uitslag), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vaststellen geldigheid rijbewijs")]
        [NUnit.Framework.TestCaseAttribute("134654554", "11 mei 2016", "11 mei 2026", "B", "geldig", null)]
        [NUnit.Framework.TestCaseAttribute("293475672", "11 mei 2016", "11 mei 2026", "B", "ongeldig: niet leesbaar", null)]
        [NUnit.Framework.TestCaseAttribute("645642356", "12 mei 2016", "12 mei 2026", "B", "ongeldig: gaat in NA eerste dag huurperiode", null)]
        [NUnit.Framework.TestCaseAttribute("645642356", "17 mei 2006", "17 mei 2016", "B", "ongeldig: verloopt OP de laatste dag huurperiode", null)]
        public virtual void VaststellenGeldigheidRijbewijs(string rijbewijsnummer, string ingangsdatum, string verloopdatum, string type, string uitslag, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vaststellen geldigheid rijbewijs", exampleTags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.Given("de eerste dag van de huurperiode is 11 mei 2016", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
testRunner.And("de laatste dag van de huurperiode is 17 mei 2016", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "rijbewijsnummer",
                        "leesbaarheid"});
            table1.AddRow(new string[] {
                        "134654554",
                        "leesbaar"});
            table1.AddRow(new string[] {
                        "293475672",
                        "niet leesbaar"});
            table1.AddRow(new string[] {
                        "645642356",
                        "leesbaar"});
#line 37
testRunner.And(string.Format("{0} is een <leesbaarheid> rijbewijs", rijbewijsnummer), ((string)(null)), table1, "And ");
#line 42
testRunner.When(string.Format("het rijbewijs met {0}, {1}, {2}, {3} en <leesbaarheid> op geldigheid wordt gecont" +
                        "roleerd,", rijbewijsnummer, ingangsdatum, verloopdatum, type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
testRunner.Then(string.Format("is het rijbewijs {0}", uitslag), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Vaststellen leesbaarheid rijbewijs")]
        public virtual void VaststellenLeesbaarheidRijbewijs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Vaststellen leesbaarheid rijbewijs", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
